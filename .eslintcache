[{"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\index.js":"1","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\reportWebVitals.js":"2","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\App.js":"3","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\redux\\reducers\\index.js":"4","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\firebase.js":"5","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\redux\\actions\\user_action.js":"6","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\ChatPage.js":"7","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\LoginPage\\LoginPage.js":"8","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\RegisterPage\\RegisterPage.js":"9","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\redux\\reducers\\user_reducer.js":"10","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\redux\\reducers\\chatRoom_reducer.js":"11","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\redux\\actions\\types.js":"12","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\MainPanel\\MainPanel.js":"13","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\SidePanel\\SidePanel.js":"14","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\SidePanel\\DirectMessages.js":"15","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\MainPanel\\MessageHeader.js":"16","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\SidePanel\\Favorited.js":"17","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\SidePanel\\ChatRooms.js":"18","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\MainPanel\\MessageForm.js":"19","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\SidePanel\\UserPanel.js":"20","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\MainPanel\\Message.js":"21","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\redux\\actions\\chatRoom_action.js":"22","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\commons\\components\\Skeleton.js":"23"},{"size":1124,"mtime":1609787602315,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1608138485703,"results":"26","hashOfConfig":"25"},{"size":1233,"mtime":1609836126736,"results":"27","hashOfConfig":"25"},{"size":219,"mtime":1609910580770,"results":"28","hashOfConfig":"25"},{"size":754,"mtime":1609772592586,"results":"29","hashOfConfig":"25"},{"size":387,"mtime":1609843776303,"results":"30","hashOfConfig":"25"},{"size":769,"mtime":1610260548639,"results":"31","hashOfConfig":"25"},{"size":2252,"mtime":1609786491873,"results":"32","hashOfConfig":"25"},{"size":4321,"mtime":1609785429150,"results":"33","hashOfConfig":"25"},{"size":904,"mtime":1609843953099,"results":"34","hashOfConfig":"25"},{"size":993,"mtime":1610437477411,"results":"35","hashOfConfig":"25"},{"size":339,"mtime":1610433008190,"results":"36","hashOfConfig":"25"},{"size":6869,"mtime":1610532300012,"results":"37","hashOfConfig":"25"},{"size":580,"mtime":1609832124122,"results":"38","hashOfConfig":"25"},{"size":2767,"mtime":1610096597306,"results":"39","hashOfConfig":"25"},{"size":7118,"mtime":1610440031115,"results":"40","hashOfConfig":"25"},{"size":3022,"mtime":1610530655681,"results":"41","hashOfConfig":"25"},{"size":9729,"mtime":1610266029885,"results":"42","hashOfConfig":"25"},{"size":6244,"mtime":1610535152268,"results":"43","hashOfConfig":"25"},{"size":3220,"mtime":1609844306791,"results":"44","hashOfConfig":"25"},{"size":1383,"mtime":1610260861579,"results":"45","hashOfConfig":"25"},{"size":539,"mtime":1610434415900,"results":"46","hashOfConfig":"25"},{"size":329,"mtime":1610532419923,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1dqdm91",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\index.js",[],["99","100"],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\reportWebVitals.js",[],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\App.js",["101"],"import React,{useEffect} from \"react\";\nimport {\n  Switch,\n  Route,\n  useHistory\n} from \"react-router-dom\";\nimport ChatPage from './components/ChatPage/ChatPage';\nimport LoginPage from './components/LoginPage/LoginPage';\nimport RegisterPage from './components/RegisterPage/RegisterPage';\nimport firebase from './firebase';\n\nimport {useDispatch, useSelector} from 'react-redux';\nimport {\n  setUser,\n  clearUser\n} from './redux/actions/user_action'\n\nfunction App() {\n  let history = useHistory();\n  let dispatch = useDispatch();\n  const isLoading = useSelector(state=> state.user.isLoading)\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user=>{\n      console.log('user',user)\n      //로그인이 된 상태\n      if(user){\n        history.push(\"/\")\n        dispatch(setUser(user))\n      }else{\n        history.push(\"/login\")\n        dispatch(clearUser())\n      }\n    })\n  }, [])\n  if(isLoading){\n    return(\n      <div>\n        ...loading\n      </div>\n    )\n  }else{\n    return (\n      <Switch>\n        <Route exact path=\"/\" component={ChatPage}/>\n        <Route exact path=\"/login\" component={LoginPage}/>\n        <Route exact path=\"/register\" component={RegisterPage}/>\n      </Switch>\n  )\n  }\n  \n}\n\nexport default App;\n","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\redux\\reducers\\index.js",[],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\firebase.js",[],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\redux\\actions\\user_action.js",[],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\ChatPage.js",[],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\LoginPage\\LoginPage.js",[],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\RegisterPage\\RegisterPage.js",[],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\redux\\reducers\\user_reducer.js",["102"],"import {\r\n    CLEAR_USER,\r\n    SET_USER,\r\n    SET_PHOTO_URL\r\n}from '../actions/types';\r\n\r\nconst initialUserState ={\r\n    currentUser: null,\r\n    isLoading: true\r\n}\r\n\r\nexport default function(state = initialUserState, action){\r\n    switch(action.type) {\r\n        case SET_USER:\r\n            return{\r\n                ...state,\r\n                currentUser:action.payload,\r\n                isLoading:false\r\n                \r\n            }\r\n            case CLEAR_USER:\r\n            return{\r\n                ...state,\r\n                currentUser:null,\r\n                isLoading:false\r\n                \r\n            }\r\n            case SET_PHOTO_URL:\r\n            return{\r\n                ...state,\r\n                currentUser:{...state.currentUser, photoURL:action.payload},\r\n                isLoading:false\r\n                \r\n            }\r\n\r\n            default:\r\n                return state;\r\n    }\r\n}","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\redux\\reducers\\chatRoom_reducer.js",["103","104"],"import { setPrivateChatRoom } from '../actions/chatRoom_action';\r\nimport { SET_CURRENT_CHAT_ROOM, SET_USER_POSTS }from '../actions/types';\r\nimport { SET_PRIVATE_CHAT_ROOM }from '../actions/types';\r\n\r\n\r\nconst initialChatRoomState ={\r\n    currentChatRoom:null,\r\n    isPrivateChatRoom:false\r\n\r\n}\r\n\r\nexport default function(state = initialChatRoomState, action){\r\n    switch(action.type) {\r\n             case SET_CURRENT_CHAT_ROOM:\r\n                 return {\r\n                     ...state,\r\n                     currentChatRoom: action.payload\r\n                 }\r\n                 case SET_PRIVATE_CHAT_ROOM:\r\n                    return {\r\n                        ...state,\r\n                        isPrivateChatRoom: action.payload\r\n                    }\r\n                case SET_USER_POSTS:\r\n                    return{\r\n                        ...state,\r\n                        userPosts : action.payload\r\n                    }\r\n            default:\r\n                return state;\r\n    }\r\n}","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\redux\\actions\\types.js",[],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\MainPanel\\MainPanel.js",[],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\SidePanel\\SidePanel.js",[],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\SidePanel\\DirectMessages.js",[],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\MainPanel\\MessageHeader.js",["105"],"import React,{useEffect, useState} from 'react'\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Media from 'react-bootstrap/Media'\r\nimport {FaLock} from 'react-icons/fa';\r\nimport {FaLockOpen} from 'react-icons/fa';\r\nimport {MdFavorite, MdFavoriteBorder} from 'react-icons/md';\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport {AiOutlineSearch} from 'react-icons/ai'\r\nimport Image from 'react-bootstrap/Image'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {useSelector} from 'react-redux'\r\nimport firebase from '../../../firebase'\r\nfunction MessageHeader({handleSearchChange}) {\r\n    const chatRoom = useSelector(state => state.chatRoom.currentChatRoom)\r\n    const isPrivateChatRoom = useSelector(state => state.chatRoom.isPrivateChatRoom)\r\n    const [isFavorited, setIsFavorited] = useState(false)\r\n    const usersRef = firebase.database().ref(\"users\");\r\n    const user = useSelector(state => state.user.currentUser)\r\n    const userPosts = useSelector(state => state.chatRoom.userPosts)\r\n    useEffect(() => {\r\n\r\n        if(chatRoom && user) {\r\n            addFavoriteListener(chatRoom.id,user.uid)\r\n            \r\n        }\r\n        \r\n    }, [])\r\n    const addFavoriteListener = (chatRoomId,userId) =>{\r\n        usersRef\r\n        .child(userId)\r\n        .child(\"favorited\")\r\n        .once(\"value\")\r\n        .then(data =>{\r\n            if(data.val() !== null){\r\n                const chatRoomIds = Object.keys(data.val());\r\n                // console.log('data.val()',data.val())\r\n                // console.log('chatRoomIds',chatRoomIds)\r\n                const isAlreadyFavorited = chatRoomIds.includes(chatRoomId)\r\n                setIsFavorited(isAlreadyFavorited)\r\n            }\r\n        })\r\n    }\r\n    const handleFavorite = () =>{\r\n        if(isFavorited){\r\n            usersRef\r\n            .child(`${user.uid}/favorited`)\r\n            .child(chatRoom.id)\r\n            .remove(err =>{\r\n                if(err !== null){\r\n                    console.log(err);\r\n                }\r\n            })\r\n            setIsFavorited(prev => !prev)\r\n        }else{\r\n            usersRef.child(`${user.uid}/favorited`).update({\r\n                [chatRoom.id] : {\r\n                    name: chatRoom.name,\r\n                    descriptiono: chatRoom.description,\r\n                    createdBy: {\r\n                        name: chatRoom.createdBy.name,\r\n                        image:chatRoom.createdBy.image\r\n                    }\r\n                }\r\n            })\r\n            setIsFavorited(prev => !prev)\r\n        }\r\n    }\r\n    const renderUserPosts= (userPosts) =>\r\n\r\n        Object.entries(userPosts)\r\n        .sort((a,b) => b[1].count - a[1].count)\r\n        .map(([key,val],i) =>(\r\n            <Media key={i}>\r\n                <img\r\n                    style={{borderRadius:25}}\r\n                    width={48}\r\n                    hegith={48}\r\n                    className=\"mr-3\"\r\n                    src={val.image}\r\n                    alt={val.name}\r\n                />\r\n                <Media.Body>\r\n                    <h6>{key}</h6>\r\n                    <p>\r\n                        {val.count} 개\r\n                    </p>\r\n                </Media.Body>\r\n            </Media>\r\n        ))\r\n            \r\n    return (\r\n        <div style={{\r\n            width: '100%',\r\n            height:'170px',\r\n            border:'.2rem solid #ececec',\r\n            borderRadius:'4px',\r\n            padding: '1rem',\r\n            marginBottom:'1rem'\r\n            \r\n        }}>\r\n            <Container>\r\n            <Row>\r\n                <Col> <h2>\r\n                    {isPrivateChatRoom ?\r\n                    <FaLock style={{marginBottom: '10px'}}/>\r\n                    :<FaLockOpen style={{marginBottom: '10px'}}/>    \r\n                }\r\n                    {chatRoom && chatRoom.name}\r\n                        \r\n                    {!isPrivateChatRoom &&\r\n                    <span style={{cursor:'pointer'}} onClick ={handleFavorite}>\r\n                        {isFavorited ?\r\n                        \r\n                    <MdFavorite style={{marginBottom: '10px'}}/>\r\n                    \r\n                    :\r\n                    <MdFavoriteBorder style={{marginBottom:'10px'}}/>\r\n                }\r\n                    </span>\r\n                }\r\n                </h2>\r\n\r\n                </Col>\r\n                <Col>\r\n                <InputGroup className=\"mb-3\">\r\n                    <InputGroup.Prepend>\r\n                        <InputGroup.Text id=\"basic-addon1\">\r\n                        <AiOutlineSearch/>\r\n                        </InputGroup.Text>\r\n                        </InputGroup.Prepend>\r\n                        <FormControl\r\n                        onChange={handleSearchChange}\r\n                        placeholder=\"Search Messages\"\r\n                        aria-label=\"Search\"\r\n                        aria-describedby=\"basic-addon1\"\r\n                        />\r\n                    </InputGroup>\r\n                </Col>\r\n            </Row>\r\n            {!isPrivateChatRoom &&\r\n            <div style={{display:'flex', justifyContent:'flex-end'}}>\r\n            <p>\r\n                <Image src ={chatRoom && chatRoom.createdBy.image}\r\n                    roundedCircle style={{width:'30px',height:'30px'}}\r\n                />{\" \"} {chatRoom && chatRoom.createdBy.name}\r\n            </p>\r\n        </div>\r\n            }\r\n            \r\n            <Row>\r\n                <Col>\r\n                <Accordion>\r\n                    <Card>\r\n                        <Card.Header style={{padding:'0 1rem'}}>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                            Description\r\n                        </Accordion.Toggle>\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                            {chatRoom && chatRoom.description}\r\n                        </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                    </Accordion>\r\n                </Col>\r\n                <Col>\r\n                <Accordion>\r\n                    <Card>\r\n                        <Card.Header style={{padding:'0 1rem'}}>\r\n                        <Accordion.Toggle as={Button} variant=\"link\" eventKey=\"0\">\r\n                            Posts Count\r\n                        </Accordion.Toggle>\r\n                        </Card.Header>\r\n                        <Accordion.Collapse eventKey=\"0\">\r\n                        <Card.Body>\r\n                        {userPosts && renderUserPosts(userPosts)}\r\n                        </Card.Body>\r\n                        </Accordion.Collapse>\r\n                    </Card>\r\n                    </Accordion>\r\n                </Col>\r\n            </Row>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MessageHeader\r\n","C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\SidePanel\\Favorited.js",[],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\SidePanel\\ChatRooms.js",[],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\MainPanel\\MessageForm.js",[],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\SidePanel\\UserPanel.js",[],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\components\\ChatPage\\MainPanel\\Message.js",[],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\redux\\actions\\chatRoom_action.js",[],"C:\\Users\\gmleh\\Desktop\\chat-app\\src\\commons\\components\\Skeleton.js",[],{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","replacedBy":"109"},{"ruleId":"110","severity":1,"message":"111","line":34,"column":6,"nodeType":"112","endLine":34,"endColumn":8,"suggestions":"113"},{"ruleId":"114","severity":1,"message":"115","line":12,"column":1,"nodeType":"116","endLine":39,"endColumn":2},{"ruleId":"117","severity":1,"message":"118","line":1,"column":10,"nodeType":"119","messageId":"120","endLine":1,"endColumn":28},{"ruleId":"114","severity":1,"message":"115","line":12,"column":1,"nodeType":"116","endLine":32,"endColumn":2},{"ruleId":"110","severity":1,"message":"121","line":32,"column":8,"nodeType":"112","endLine":32,"endColumn":10,"suggestions":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["125"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'setPrivateChatRoom' is defined but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'addFavoriteListener', 'chatRoom', and 'user'. Either include them or remove the dependency array.",["126"],"no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [dispatch, history]",{"range":"131","text":"132"},"Update the dependencies array to be: [addFavoriteListener, chatRoom, user]",{"range":"133","text":"134"},[872,874],"[dispatch, history]",[1400,1402],"[addFavoriteListener, chatRoom, user]"]